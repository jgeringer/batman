{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/josephgeringer/Documents/GitProjects/next-learn-demo/6-fetching-data/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, show.name)));\n  })), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show, res2, data2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"Fetched show: \".concat(show.name));\n            _context.next = 10;\n            return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n          case 10:\n            res2 = _context.sent;\n            _context.next = 13;\n            return res2.json();\n\n          case 13:\n            data2 = _context.sent;\n            return _context.abrupt(\"return\", {\n              show: show,\n              shows: data2.map(function (entry) {\n                return entry.show;\n              })\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["/Users/josephgeringer/Documents/GitProjects/next-learn-demo/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Link","Post","props","shows","map","show","id","name","summary","replace","image","medium","getInitialProps","context","query","res","json","console","log","res2","data2","entry"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACG,IAAN,CAAWE,IAAhB,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACG,IAAN,CAAWG,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAZF,EAaE;AAAK,IAAA,GAAG,EAAEP,KAAK,CAACG,IAAN,CAAWK,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADgB;AAAA,CAAlB;;AAkBAV,IAAI,CAACW,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbP,YAAAA,EADa,GACNO,OAAO,CAACC,KADF,CACbR,EADa;AAAA;AAAA,mBAEHP,KAAK,wCAAiCO,EAAjC,EAFF;;AAAA;AAEfS,YAAAA,GAFe;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfX,YAAAA,IAHe;AAKrBY,YAAAA,OAAO,CAACC,GAAR,yBAA6Bb,IAAI,CAACE,IAAlC;AALqB;AAAA,mBAOFR,KAAK,CAAC,8CAAD,CAPH;;AAAA;AAOfoB,YAAAA,IAPe;AAAA;AAAA,mBAQDA,IAAI,CAACH,IAAL,EARC;;AAAA;AAQfI,YAAAA,KARe;AAAA,6CAWd;AACLf,cAAAA,IAAI,EAAJA,IADK;AAELF,cAAAA,KAAK,EAAEiB,KAAK,CAAChB,GAAN,CAAU,UAAAiB,KAAK;AAAA,uBAAIA,KAAK,CAAChB,IAAV;AAAA,eAAf;AAFF,aAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAiBA,eAAeJ,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Post = props => (\n  <Layout>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n    <img src={props.show.image.medium} />\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  const res2 = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data2 = await res2.json();\n\n\n  return { \n    show,\n    shows: data2.map(entry => entry.show)\n  };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}