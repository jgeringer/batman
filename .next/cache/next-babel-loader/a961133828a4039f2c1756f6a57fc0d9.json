{"ast":null,"code":"var _jsxFileName = \"/Users/josephgeringer/Documents/GitProjects/next-learn-demo/6-fetching-data/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Post = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, show.name))))), __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.show.name), __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n  src: props.show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}));\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  const res2 = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data2 = await res2.json();\n  return {\n    show,\n    shows: data2.map(entry => entry.show)\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/josephgeringer/Documents/GitProjects/next-learn-demo/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Link","Post","props","shows","map","show","id","name","summary","replace","image","medium","getInitialProps","context","query","res","json","console","log","res2","data2","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKL,KAAK,CAACG,IAAN,CAAWE,IAAhB,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIL,KAAK,CAACG,IAAN,CAAWG,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAZF,EAaE;AAAK,EAAA,GAAG,EAAEP,KAAK,CAACG,IAAN,CAAWK,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbF,CADF;;AAkBAV,IAAI,CAACW,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEP,IAAAA;AAAF,MAASO,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAE,gCAA+BO,EAAG,EAApC,CAAvB;AACA,QAAMD,IAAI,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBb,IAAI,CAACE,IAAK,EAAvC;AAEA,QAAMY,IAAI,GAAG,MAAMpB,KAAK,CAAC,8CAAD,CAAxB;AACA,QAAMqB,KAAK,GAAG,MAAMD,IAAI,CAACH,IAAL,EAApB;AAGA,SAAO;AACLX,IAAAA,IADK;AAELF,IAAAA,KAAK,EAAEiB,KAAK,CAAChB,GAAN,CAAUiB,KAAK,IAAIA,KAAK,CAAChB,IAAzB;AAFF,GAAP;AAID,CAfD;;AAiBA,eAAeJ,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Post = props => (\n  <Layout>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n    <img src={props.show.image.medium} />\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  const res2 = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data2 = await res2.json();\n\n\n  return { \n    show,\n    shows: data2.map(entry => entry.show)\n  };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}